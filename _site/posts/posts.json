[
  {
    "path": "posts/2021-07-16-assignment-dong-fang/",
    "title": "Data Visualization and Analysis for the Kronos Incident Investigation Using R",
    "description": "VAST Challenge 2021 Mini-Challenge 2.",
    "author": [
      {
        "name": "DONG Fang",
        "url": "https://www.linkedin.com/in/reginadongf/"
      }
    ],
    "date": "2021-07-16",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1. Background1.1 Case overview\r\n1.2 Requirement for Mini-Challenge 2\r\n\r\n2. Data Preparation2.1 Data description\r\n2.2 Steps for data preparation2.2.1 Installing and launching R Packages\r\n2.2.2 Importing relevent data\r\n2.2.3 Wrangling the data\r\n2.2.4 Exploring and cleaning data\r\n\r\n\r\n3. Data Visualization3.1 Histogram showing frequecy of transactions\r\n3.2 Geographical graph showing movement path\r\n\r\n4. Data Analysis and Insights\r\n5. Conclusion\r\n\r\n1. Background\r\n1.1 Case overview\r\nGAStech is a Tethys-based company having been operating a natural gas production site in the island country of Kronos for over 20 years. It has produced remarkable profits and developed strong relationships with the government of Kronos, but has not been as successful in demonstrating environmental stewardship.\r\nIn January, 2014, the leaders of GAStech are celebrating their new-found fortune as a result of the initial public offering of their very successful company. In the midst of this celebration, several employees of GAStech go missing. An organization known as the Protectors of Kronos (POK) is suspected in the disappearance, but things may not be what they seem.\r\nThis case is designed aim at helping the law enforcement from Kronos and Tethys investigate the incident by using data visualization techniques. There are 3 challenges in VAST Challenge 2021 focusing on different aspects of case analysis. In this report we concentrated on visualization and analysis for Mini-Challenge 2.\r\n1.2 Requirement for Mini-Challenge 2\r\nMany of the Abila, Kronos-based employees of GAStech have company cars which are approved for both personal and business use. Those who do not have company cars have the ability to check out company trucks for business use, but these trucks cannot be used for personal business. The vehicles are installed with GPS tracked periodically as long as they are moving. Besides, in order to promote local businesses, Kronos based companies provide a Kronos Kares benefit card to GASTech employees giving them discounts and rewards in exchange for collecting information about their credit card purchases and preferences as recorded on loyalty cards.\r\nNow the vehicle tracking data for the two weeks prior to the incident, car assignment list, transaction records in credit card and loyal card are available for analyzing.\r\nThe challenges to be dealt with are listed below:\r\nNo.\r\nQuestion\r\n1\r\nUsing just the credit and loyalty card data, identify the most popular locations, and when they are popular. What anomalies do you see? What corrections would you recommend to correct these anomalies?\r\n2\r\nAdd the vehicle data to your analysis of the credit and loyalty card data. How does your assessment of the anomalies in question 1 change based on this new data? What discrepancies between vehicle, credit, and loyalty card data do you find?\r\n3\r\nCan you infer the owners of each credit card and loyalty card? What is your evidence? Where are there uncertainties in your method? Where are there uncertainties in the data?\r\n4\r\nGiven the data sources provided, identify potential informal or unofficial relationships among GASTech personnel. Provide evidence for these relationships.\r\n5\r\nDo you see evidence of suspicious activity? Identify 1- 10 locations where you believe the suspicious activity is occurring, and why.\r\nThe detailed information and all the data needed for Mini-challenge 2 is available in VAST Challenge 2021 official website.\r\n2. Data Preparation\r\n2.1 Data description\r\nThe dataset used for Mini-Challenge 2 includes 4 CSV files, a package of ESRI shapefiles of Abila and Kronos, and a tourist map of Abila in JPEG format, as shown in the following screenshot.\r\n\r\nFig.1 Dataset for visualization and analysis\r\n\r\nThe data contents in the CSV files are listed below:\r\nFile\r\nDescription\r\nData Content\r\ncar-assignments.csv\r\nA list of vehicle assignments by employee\r\nEmployee Last Name  Employee First Name  Car ID  Current Employment Type (Department)  Current Employment Title (job title)\r\ngps.csv\r\nvehicle tracking data\r\nTimestamp  Car ID (integer)  Latitude  Longitude\r\ncc_data.csv\r\ncredit and debit card transaction data\r\nTimestamp  Location (name of the business)  Price (real)  Last 4 digits of the credit or debit card number\r\nloyalty_data.csv\r\nloyalty card transaction data\r\nTimestamp  Location (name of the business)  Price (real)  Loyalty Number (A 5-character code starting with L that is unique for each card)\r\n2.2 Steps for data preparation\r\n2.2.1 Installing and launching R Packages\r\nWe used R studio as the tool to import, process and visualize the data. The first thing is to launch necessary R packages for next steps.\r\nThe code chunk below is used to install and load the packages.\r\n\r\n\r\npackages = c('ggiraph', 'plotly','DT', 'patchwork', \r\n             'raster', 'sf','tmap', 'mapview','gifski',\r\n             'tidyverse', 'mlr','lubridate')\r\nfor (p in packages){\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n2.2.2 Importing relevent data\r\nFirst of all we import the CSV file using below code chunk.\r\n\r\n\r\ncar_ass <- read_csv(\"data/car-assignments.csv\")\r\ngps <- read_csv(\"data/gps.csv\")\r\ncc <- read_csv(\"data/cc_data.csv\", locale = locale(encoding = \"windows-1252\"))\r\nloyalty <- read_csv(\"data/loyalty_data.csv\", locale = locale(encoding = \"windows-1252\"))\r\n\r\n\r\n\r\n2.2.3 Wrangling the data\r\nAs shown below, we need to check if the data type is proper in the imported tibble data table. It’s obvious that the Timestamp in gps.csv, cc_data.csv and loyalty_data.csv should be in datetime format but now it’s in character format. Besides, CarID in car-assignments.csv, id in gps.csv and last4ccnum in cc_data.csv should be converted from numerical data to categorical data.\r\ncar-assignments.csv\r\n\r\nRows: 44\r\nColumns: 5\r\n$ LastName               <chr> \"Calixto\", \"Azada\", \"Balas\", \"Barr...\r\n$ FirstName              <chr> \"Nils\", \"Lars\", \"Felix\", \"Ingrid\",...\r\n$ CarID                  <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,...\r\n$ CurrentEmploymentType  <chr> \"Information Technology\", \"Enginee...\r\n$ CurrentEmploymentTitle <chr> \"IT Helpdesk\", \"Engineer\", \"Engine...\r\n\r\ngps.csv\r\n\r\nRows: 685,169\r\nColumns: 4\r\n$ Timestamp <chr> \"01/06/2014 06:28:01\", \"01/06/2014 06:28:01\", \"...\r\n$ id        <dbl> 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,...\r\n$ lat       <dbl> 36.07623, 36.07622, 36.07621, 36.07622, 36.0762...\r\n$ long      <dbl> 24.87469, 24.87460, 24.87444, 24.87425, 24.8741...\r\n\r\ncc_data.csv\r\n\r\nRows: 1,490\r\nColumns: 4\r\n$ timestamp  <chr> \"01/06/2014 07:28\", \"01/06/2014 07:34\", \"01/06...\r\n$ location   <chr> \"Brew've Been Served\", \"Hallowed Grounds\", \"Br...\r\n$ price      <dbl> 11.34, 52.22, 8.33, 16.72, 4.24, 4.17, 28.73, ...\r\n$ last4ccnum <dbl> 4795, 7108, 6816, 9617, 7384, 5368, 7253, 4948...\r\n\r\nloyalty_data.csv\r\n\r\nRows: 1,392\r\nColumns: 4\r\n$ timestamp  <chr> \"01/06/2014\", \"01/06/2014\", \"01/06/2014\", \"01/...\r\n$ location   <chr> \"Brew've Been Served\", \"Brew've Been Served\", ...\r\n$ price      <dbl> 4.17, 9.60, 16.53, 11.51, 12.93, 4.27, 11.20, ...\r\n$ loyaltynum <chr> \"L2247\", \"L9406\", \"L8328\", \"L6417\", \"L1107\", \"...\r\n\r\nWe use below code chunk to covert data types.\r\n\r\n\r\ngps$Timestamp = mdy_hms(gps$Timestamp)\r\ncc$timestamp = mdy_hm(cc$timestamp)\r\nloyalty$timestamp = mdy(loyalty$timestamp)\r\n\r\ncar_ass$CarID = as.character(car_ass$CarID)\r\ngps$id = as.character(gps$id)\r\ncc$last4ccnum = as.character(cc$last4ccnum)\r\n\r\n\r\n\r\nAs the transaction date in credit and loyalty card data are all in January, we derive days and hours from timestamp and display them in different columns in cc_data.csv and loyalty_data.csv using below code chunk. The same as GPS tracking data.\r\n\r\n\r\ncc$day = day(cc$timestamp)\r\ncc$hour = hour(cc$timestamp)\r\nloyalty$day = day(loyalty$timestamp)\r\ngps$day = as.factor(day(gps$Timestamp))\r\ngps$hour = as.factor(hour(gps$Timestamp))\r\n\r\n\r\n\r\n2.2.4 Exploring and cleaning data\r\nThen we do some exploration for the data and check the missing values by using the code chunks below. Only CarID in car-assignments.csv has 9 missing values.\r\n\r\n\r\nknitr::kable(summarizeColumns(car_ass))\r\n\r\n\r\nname\r\ntype\r\nna\r\nmean\r\ndisp\r\nmedian\r\nmad\r\nmin\r\nmax\r\nnlevs\r\nLastName\r\ncharacter\r\n0\r\nNA\r\n0.9545455\r\nNA\r\nNA\r\n1\r\n2\r\n38\r\nFirstName\r\ncharacter\r\n0\r\nNA\r\n0.9545455\r\nNA\r\nNA\r\n1\r\n2\r\n43\r\nCarID\r\ncharacter\r\n9\r\nNA\r\nNA\r\nNA\r\nNA\r\n1\r\n1\r\n35\r\nCurrentEmploymentType\r\ncharacter\r\n0\r\nNA\r\n0.7045455\r\nNA\r\nNA\r\n5\r\n13\r\n5\r\nCurrentEmploymentTitle\r\ncharacter\r\n0\r\nNA\r\n0.7954545\r\nNA\r\nNA\r\n1\r\n9\r\n21\r\n\r\n\r\n\r\nknitr::kable(summarizeColumns(gps))\r\n\r\n\r\nname\r\ntype\r\nna\r\nmean\r\ndisp\r\nmedian\r\nmad\r\nmin\r\nmax\r\nnlevs\r\nTimestamp\r\nPOSIXct\r\n0\r\nNA\r\nNA\r\nNA\r\nNA\r\n1.00000\r\n22.00000\r\n303206\r\nid\r\ncharacter\r\n0\r\nNA\r\n0.9639315\r\nNA\r\nNA\r\n2317.00000\r\n24713.00000\r\n40\r\nlat\r\nnumeric\r\n0\r\n36.06055\r\n0.0095989\r\n36.05806\r\n0.0103162\r\n36.04802\r\n36.08996\r\n0\r\nlong\r\nnumeric\r\n0\r\n24.87644\r\n0.0137735\r\n24.87646\r\n0.0118898\r\n24.82509\r\n24.90849\r\n0\r\nday\r\nfactor\r\n0\r\nNA\r\n0.8791743\r\nNA\r\nNA\r\n12208.00000\r\n82786.00000\r\n14\r\nhour\r\nfactor\r\n0\r\nNA\r\n0.8450806\r\nNA\r\nNA\r\n182.00000\r\n106146.00000\r\n21\r\n\r\n\r\n\r\nknitr::kable(summarizeColumns(cc))\r\n\r\n\r\nname\r\ntype\r\nna\r\nmean\r\ndisp\r\nmedian\r\nmad\r\nmin\r\nmax\r\nnlevs\r\ntimestamp\r\nPOSIXct\r\n0\r\nNA\r\nNA\r\nNA\r\nNA\r\n1.00\r\n16\r\n1116\r\nlocation\r\ncharacter\r\n0\r\nNA\r\n0.8577181\r\nNA\r\nNA\r\n1.00\r\n212\r\n34\r\nprice\r\nnumeric\r\n0\r\n207.69653\r\n740.8554672\r\n28.24\r\n24.61857\r\n2.01\r\n10000\r\n0\r\nlast4ccnum\r\ncharacter\r\n0\r\nNA\r\n0.9751678\r\nNA\r\nNA\r\n4.00\r\n37\r\n55\r\nday\r\ninteger\r\n0\r\n11.98725\r\n3.9517538\r\n12.00\r\n5.93040\r\n6.00\r\n19\r\n0\r\nhour\r\ninteger\r\n0\r\n13.86376\r\n4.5567346\r\n13.00\r\n7.41300\r\n3.00\r\n22\r\n0\r\n\r\n\r\n\r\nknitr::kable(summarizeColumns(loyalty))\r\n\r\n\r\nname\r\ntype\r\nna\r\nmean\r\ndisp\r\nmedian\r\nmad\r\nmin\r\nmax\r\nnlevs\r\ntimestamp\r\nDate\r\n0\r\nNA\r\nNA\r\nNA\r\nNA\r\n43\r\n123.00\r\n14\r\nlocation\r\ncharacter\r\n0\r\nNA\r\n0.8599138\r\nNA\r\nNA\r\n1\r\n195.00\r\n33\r\nprice\r\nnumeric\r\n0\r\n204.33392\r\n719.0137834\r\n22.845\r\n16.84234\r\n3\r\n4983.52\r\n0\r\nloyaltynum\r\ncharacter\r\n0\r\nNA\r\n0.9604885\r\nNA\r\nNA\r\n3\r\n55.00\r\n54\r\nday\r\ninteger\r\n0\r\n12.02945\r\n3.9500651\r\n13.000\r\n5.93040\r\n6\r\n19.00\r\n0\r\n\r\nThe records containing missing values in car-assignment.csv are shown below. We can see these records are all company trucks not for personal use.\r\n\r\n\r\ncar_ass_na <- filter(car_ass, is.na(CarID))\r\nknitr::kable(car_ass_na, format = \"html\")\r\n\r\n\r\n\r\nLastName\r\n\r\n\r\nFirstName\r\n\r\n\r\nCarID\r\n\r\n\r\nCurrentEmploymentType\r\n\r\n\r\nCurrentEmploymentTitle\r\n\r\n\r\nHafon\r\n\r\n\r\nAlbina\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nHawelon\r\n\r\n\r\nBenito\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nHawelon\r\n\r\n\r\nClaudio\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nMies\r\n\r\n\r\nHenk\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nMorlun\r\n\r\n\r\nValeria\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nMorlun\r\n\r\n\r\nAdan\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nMorluniau\r\n\r\n\r\nCecilia\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nNant\r\n\r\n\r\nIrene\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\nScozzese\r\n\r\n\r\nDylan\r\n\r\n\r\nNA\r\n\r\n\r\nFacilities\r\n\r\n\r\nTruck Driver\r\n\r\n\r\n3. Data Visualization\r\n3.1 Histogram showing frequecy of transactions\r\nFirst of all, a 2d histogram with Location by Hour for credit card transaction was built by below code chunk.\r\n\r\n\r\nd <- highlight_key(cc)\r\n\r\ngra_1 <- plot_ly(data = d, x = ~as.factor(hour), y = ~location,\r\n                 hovertemplate = paste(\r\n                   \" %{yaxis.title.text}: %{y}<br>\",\r\n                   \"%{xaxis.title.text}: %{x}<br>\",\r\n                   \"Transaction Count: %{z}\",\r\n                   \"<extra><\/extra>\")) %>%\r\n  add_histogram2d(colors = \"Blues\") %>%\r\n  layout(title = \"<b>Graph.1 Credit Card Transcation Frequency by Hour<\/b>\",\r\n         xaxis = list(title = \"Time\", tickmode = \"linear\"),\r\n         yaxis = list(title=\"Location\", tickmode = \"linear\")\r\n         )\r\n\r\ncrosstalk::bscols(gra_1,\r\n                  crosstalk::filter_select(\"day\", \"Day\", d, ~as.factor(day), multiple = F), widths = 10)\r\n\r\n\r\npreserveaf6ae8a7e276a2e2\r\n\r\nThen the 2d histograms with Location by Day for credit card and loyalty card transaction were created as below.\r\n\r\n\r\ngra_2.1 <- plot_ly(data = cc, x = ~as.factor(day), y = ~location,\r\n                 hovertemplate = paste(\r\n                   \" %{yaxis.title.text}: %{y}<br>\",\r\n                   \"%{xaxis.title.text}: %{x}<br>\",\r\n                   \"Transaction Count: %{z}\",\r\n                   \"<extra><\/extra>\")) %>%\r\n  add_histogram2d(colors = \"Blues\") %>%\r\n  layout(annotations = list(text = \"Credit Card\", showarrow = F, x =17, y=32),\r\n         xaxis = list(tickmode = \"linear\"),\r\n         yaxis = list(tickmode = \"linear\")\r\n         )\r\n\r\ngra_2.2 <- plot_ly(data = loyalty, x = ~as.factor(day), y = ~location,\r\n                 hovertemplate = paste(\r\n                   \" Location: %{y}<br>\",\r\n                   \"Date of Jan: %{x}<br>\",\r\n                   \"Transaction Count: %{z}\",\r\n                   \"<extra><\/extra>\")) %>%\r\n  add_histogram2d(colors = \"Purples\") %>%\r\n  layout(annotations = list(text = \"Loyalty Card\", showarrow = F, x =17, y=32),\r\n         xaxis = list(tickmode = \"linear\"),\r\n         yaxis = list(tickmode = \"linear\", visible = T)\r\n         )\r\n\r\ngra_2 <- subplot(gra_2.1, gra_2.2, nrows = 1, shareY = T) %>%\r\n  layout(title = \"<b>Graph.2 Transaction Frequency by Day<\/b>\",\r\n         xaxis = list(title = \"Date of Jan\"),\r\n         xaxis2 = list(title = \"Date of Jan\"),\r\n         yaxis = list(title = \"Location\"),\r\n         autosize = F, width = 900, width2 = 900, height = 400\r\n         )\r\n\r\ngra_2\r\n\r\n\r\npreservef8f350b41b6b4669\r\n\r\n3.2 Geographical graph showing movement path\r\nNow take the GPS tracking data into account, it’s necessary to draw movement path on the tourist map with the GPS tracking data, so that we can see where the employees have gone and gathered together during the two weeks before the disappearance.\r\nThe first thing to do is plotting Raster Layer of the tourist map of Abila, Kronos, as the background map, and import Abila GIS data layer.\r\n\r\n\r\nbgmap <- raster(\"data/Geospatial/MC2-tourist.tif\")\r\n\r\ntm_shape(bgmap) +\r\ntm_rgb(bgmap, r = 1,g = 2,b = 3,\r\n       alpha = NA,\r\n       saturation = 1,\r\n       interpolate = TRUE,\r\n       max.value = 255)\r\n\r\n\r\n\r\nAbila_st <- st_read(dsn = \"data/Geospatial\",\r\n                    layer = \"Abila\")\r\n\r\n\r\n\r\nThe code chunk below is used to convert GPS spatial data into a Simple Feature (SF) data frame.\r\n\r\n\r\ngps_sf <- st_as_sf(gps, \r\n                   coords = c(\"long\", \"lat\"),\r\n                   crs = 4326)\r\n\r\n\r\n\r\nThen combine the background map and the GPS tracking lines to generate the movement path.\r\n\r\n\r\ngps_path <- gps_sf %>%\r\n  group_by(id, day) %>%\r\n  summarize(m = mean(Timestamp), \r\n            do_union=FALSE) %>%\r\n  st_cast(\"LINESTRING\")\r\n\r\nnp = npts(gps_path, by_feature = T)\r\ngps_path2 <- cbind(gps_path, np) %>%\r\n  filter(np > 1) # exclude orphan coordinate records\r\n\r\n\r\n\r\n\r\n\r\n#d <- highlight_key(gps_path2)\r\n\r\ntmap_mode(\"view\")\r\n\r\nm <- tm_shape(bgmap) +\r\n  tm_rgb(bgmap, r = 1,g = 2,b = 3,\r\n       alpha = NA,\r\n       saturation = 1,\r\n       interpolate = TRUE,\r\n       max.value = 255) +\r\n  tm_shape(gps_path2) +\r\n  tm_lines(col = \"day\") \r\n  #tm_facets(by = \"id\")\r\nm\r\n\r\n\r\npreserve69f280fd7406e125\r\n\r\n#gg <- highlight(m,\r\n#                \"plotly_selected\")\r\n\r\n#crosstalk::bscols(gg,\r\n#                  crosstalk::filter_slider(\"id\", \"ID\", gps_path2, ~as.numeric(id)),\r\n#                  widths = 5)\r\n\r\n\r\n\r\n\r\n\r\ngps_path_selected <- gps_path2 %>%\r\n  filter(day==\"17\")\r\n\r\ntmap_mode(\"view\")\r\ntm_shape(bgmap) +\r\n  tm_rgb(bgmap, r = 1,g = 2,b = 3,\r\n       alpha = NA,\r\n       saturation = 1,\r\n       interpolate = TRUE,\r\n       max.value = 255) +\r\n  tm_shape(gps_path_selected) +\r\n  tm_lines(col = \"id\")\r\n\r\n\r\npreservec367a70dd06881ef\r\n\r\n\r\n\r\n#tmap_mode(\"view\")\r\n\r\nm <- tm_shape(bgmap) +\r\n  tm_rgb(bgmap, r = 1,g = 2,b = 3,\r\n       alpha = NA,\r\n       saturation = 1,\r\n       interpolate = TRUE,\r\n       max.value = 255) +\r\n  tm_shape(gps_path2) +\r\n  tm_lines() +\r\n  tm_facets(along = \"id\")\r\n\r\ntmap_animation(m, \r\n               filename = \"img/days.gif\",\r\n               delay=40)\r\n\r\n\r\n\r\n4. Data Analysis and Insights\r\n5. Conclusion\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-07-16-assignment-dong-fang/assignment-dong-fang_files/figure-html5/unnamed-chunk-16-1.png",
    "last_modified": "2021-07-17T05:29:49+08:00",
    "input_file": "assignment-dong-fang.knit.md"
  },
  {
    "path": "posts/2021-06-13-proposal/",
    "title": "Interactive Visualization for Exploring Abnormal Tracking and Transaction of GAStech Employee",
    "description": "Project Proposal of VAST Challenge 2021 Mini Challenge 2.",
    "author": [
      {
        "name": "DONG Fang, YIN Xiaolan, ZHANG Youzhen",
        "url": "https://isss608vaag2group3.netlify.app/"
      }
    ],
    "date": "2021-06-13",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1. Background\r\n2. Motivation\r\n3. Project objectives\r\n4. Proposed Scope and Methodology\r\n5. Project Timeline\r\n6. Storyboard & Visualization Features\r\n7. Software Tools\r\n8. Proposed R Packages\r\n\r\n1. Background\r\nThe IEEE Visual Analytics Science and Technology (VAST) Challenge is an annual contest with the goal of advancing the field of visual analytics through competition. The VAST Challenge is designed to help researchers understand how their software would be used in a novel analytic task and determine if their data transformations, visualizations, and interactions would be beneficial for particular analytic tasks. VAST Challenge 2021 is the so-called Kronos Incident in which several employees of a company named GAStech, located at the island of Kronos went missing. Mini-Challenge 2 aims to find unusual and suspicious behaviors of employees then to make contributions on investigation of the incident.\r\n2. Motivation\r\nThe task of Mini Challenge 2 is to explore anomalies and get meaningful insights to make recommendations for further investigation of the incident. The dataset used here combines geospatial data with aspatial information that allows us to apply geospatial regression techniques and geospatial clustering to understand nutrition and obesity at different geographic granularity.\r\nThe missing, conflicting, and imperfect data gives us chances to use exploratory data analysis techniques to discover patterns, spot anomalies, and check assumptions. We will attempt to link the geographic movement data and consumption data of employees’ credit card purchases and preferences together to provide actionable insights to the analysis.\r\n3. Project objectives\r\nThis project aims to deliver an R-Shiny application that provides:\r\nInteractive user interface design\r\nNutritional information interfaced with a visual chart representation\r\nClustering techniques through both aspatial and geospatial methods\r\nMeaningful and valid insights based on the dataset used\r\n4. Proposed Scope and Methodology\r\nAnalysis of Kronos Incident dataset with background research\r\nExploratory Data Analysis (EDA) methods in R\r\nExploratory Spatial Data Analysis (ESDA) methods in R\r\nClustering methods for aspatial and geospatial information in R\r\nR Markdown development for functionality checks\r\nR-Shiny app development for user interactivity\r\n5. Project Timeline\r\nFig. 1 The project timeline planned\r\n6. Storyboard & Visualization Features\r\nTo be edited after personal assignment complete.\r\n7. Software Tools\r\nGit hub: https://github.com/VisualG2G3/VisualG2Group3\r\nRStudio: https://rstudio.com/\r\n8. Proposed R Packages\r\nClustGeo: https://cran.r-project.org/web/packages/ClustGeo\r\nRColorBrewer: https://cran.r-project.org/web/packages/RColorBrewer\r\nshiny: https://shiny.rstudio.com\r\nshinythemes: https://cran.r-project.org/web/packages/shinythemes\r\nshinyWidgets: https://cran.r-project.org/web/packages/shinyWidgets\r\ntidyverse: https://www.tidyverse.org\r\ntmap: https://cran.r-project.org/web/packages/tmap\r\nsp: https://cran.r-project.org/web/packages/sp\r\nleaflet: https://cran.r-project.org/web/packages/leaflet\r\nplotly: https://cran.r-project.org/web/packages/plotly\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-06-20T21:21:44+08:00",
    "input_file": "proposal.knit.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to G2Group3 project",
    "description": "Welcome to our new blog, for VAA_G2_Group3 project. We hope you enjoy reading what we have to say!",
    "author": [
      {
        "name": "DONG Fang, YIN Xiaolan, ZHANG Youzhen",
        "url": "https://isss608vaag2group3.netlify.app/"
      }
    ],
    "date": "2021-06-13",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-06-20T21:26:26+08:00",
    "input_file": "welcome.knit.md"
  }
]
